{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\n    var form = document.createElement(\"form\");\n    form.className = \"new-employee-form\";\n    var fields = [\n        {\n            label: \"Name\",\n            type: \"text\",\n            qa: \"name\"\n        },\n        {\n            label: \"Position\",\n            type: \"text\",\n            qa: \"position\"\n        },\n        {\n            label: \"Office\",\n            type: \"select\",\n            qa: \"office\",\n            options: [\n                \"Tokyo\",\n                \"Singapore\",\n                \"London\",\n                \"New York\",\n                \"Edinburgh\",\n                \"San Francisco\"\n            ]\n        },\n        {\n            label: \"Age\",\n            type: \"number\",\n            qa: \"age\"\n        },\n        {\n            label: \"Salary\",\n            type: \"number\",\n            qa: \"salary\"\n        }\n    ];\n    fields.forEach(function(field) {\n        var label = document.createElement(\"label\");\n        label.textContent = \"\".concat(field.label, \": \");\n        var input;\n        if (field.type === \"select\") {\n            input = document.createElement(\"select\");\n            field.options.forEach(function(option) {\n                var opt = document.createElement(\"option\");\n                opt.value = option;\n                opt.textContent = option;\n                input.appendChild(opt);\n            });\n        } else {\n            input = document.createElement(\"input\");\n            input.type = field.type;\n        }\n        input.name = field.qa;\n        input.setAttribute(\"data-qa\", field.qa);\n        label.appendChild(input);\n        form.appendChild(label);\n    });\n    var submitButton = document.createElement(\"button\");\n    submitButton.type = \"button\";\n    submitButton.textContent = \"Save to table\";\n    submitButton.setAttribute(\"data-qa\", \"save\");\n    form.appendChild(submitButton);\n    document.querySelector(\"table\").insertAdjacentElement(\"afterend\", form);\n    var tbody = document.querySelector(\"tbody\");\n    var pushNotification = function(title, description, type) {\n        var element = document.createElement(\"div\");\n        var h2Element = document.createElement(\"h2\");\n        var pElement = document.createElement(\"p\");\n        element.classList.add(\"notification\", type);\n        element.setAttribute(\"data-qa\", \"notification\");\n        h2Element.classList.add(\"title\");\n        h2Element.textContent = title;\n        pElement.textContent = description;\n        element.appendChild(h2Element);\n        element.appendChild(pElement);\n        document.body.appendChild(element);\n        setTimeout(function() {\n            element.remove();\n        }, 3000);\n    };\n    submitButton.addEventListener(\"click\", function() {\n        var employeeName = form.querySelector('[data-qa=\"name\"]').value.trim();\n        var position = form.querySelector('[data-qa=\"position\"]').value.trim();\n        var office = form.querySelector('[data-qa=\"office\"]').value;\n        var age = form.querySelector('[data-qa=\"age\"]').value.trim();\n        var salary = form.querySelector('[data-qa=\"salary\"]').value.trim();\n        if (employeeName.length < 4) {\n            pushNotification(\"Error\", \"Name must be at least 4 characters long.\", \"error\");\n            return;\n        }\n        if (age < 18 || age > 90) {\n            pushNotification(\"Error\", \"Age must be between 18 and 90.\", \"error\");\n            return;\n        }\n        if (!employeeName || !position || !office || !age || !salary) {\n            pushNotification(\"Error\", \"All fields are required.\", \"error\");\n            return;\n        }\n        var newRow = document.createElement(\"tr\");\n        newRow.innerHTML = \"\\n          <td>\".concat(employeeName, \"</td>\\n          <td>\").concat(position, \"</td>\\n          <td>\").concat(office, \"</td>\\n          <td>\").concat(age, \"</td>\\n          <td>$\").concat(parseInt(salary).toLocaleString(), \"</td>\\n      \");\n        tbody.appendChild(newRow);\n        pushNotification(\"Success\", \"New employee added to the table.\", \"success\");\n        form.reset();\n    });\n    var theadElem = document.querySelector(\"thead\");\n    var thList = Array.from(theadElem.querySelectorAll(\"th\"));\n    var sortOrder = \"asc\";\n    var lastSortedColumnIndex = -1;\n    var sortTable = function(rows, column) {\n        var isNumber = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, order = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : \"asc\";\n        return rows.sort(function(rowA, rowB) {\n            var cellA = rowA.cells[column].innerText.trim();\n            var cellB = rowB.cells[column].innerText.trim();\n            if (isNumber) {\n                cellA = parseInt(cellA.replace(/[$,]/g, \"\"));\n                cellB = parseInt(cellB.replace(/[$,]/g, \"\"));\n            }\n            if (order === \"asc\") return isNumber ? cellA - cellB : cellA.localeCompare(cellB);\n            else return isNumber ? cellB - cellA : cellB.localeCompare(cellA);\n        });\n    };\n    thList.forEach(function(thElement, index) {\n        thElement.addEventListener(\"click\", function() {\n            var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n            var isNumber = index === 3 || index === 4;\n            var order = \"asc\";\n            if (lastSortedColumnIndex === index) order = sortOrder === \"asc\" ? \"desc\" : \"asc\";\n            else lastSortedColumnIndex = index;\n            sortOrder = order;\n            var sortedRows = sortTable(rows, index, isNumber, sortOrder);\n            tbody.innerHTML = \"\";\n            sortedRows.forEach(function(row) {\n                return tbody.appendChild(row);\n            });\n        });\n    });\n    var activeRow = null;\n    tbody.addEventListener(\"click\", function(ev) {\n        var targetRow = ev.target.closest(\"tr\");\n        if (!targetRow) return;\n        if (activeRow) activeRow.classList.remove(\"active\");\n        if (activeRow !== targetRow) {\n            targetRow.classList.add(\"active\");\n            activeRow = targetRow;\n        } else activeRow = null;\n    });\n});\n\n//# sourceMappingURL=index.3b58c743.js.map\n","document.addEventListener('DOMContentLoaded', () => {\n  const form = document.createElement('form');\n\n  form.className = 'new-employee-form';\n\n  const fields = [\n    { label: 'Name', type: 'text', qa: 'name' },\n    { label: 'Position', type: 'text', qa: 'position' },\n    {\n      label: 'Office',\n      type: 'select',\n      qa: 'office',\n      options: [\n        'Tokyo',\n        'Singapore',\n        'London',\n        'New York',\n        'Edinburgh',\n        'San Francisco',\n      ],\n    },\n    { label: 'Age', type: 'number', qa: 'age' },\n    { label: 'Salary', type: 'number', qa: 'salary' },\n  ];\n\n  fields.forEach((field) => {\n    const label = document.createElement('label');\n\n    label.textContent = `${field.label}: `;\n\n    let input;\n\n    if (field.type === 'select') {\n      input = document.createElement('select');\n\n      field.options.forEach((option) => {\n        const opt = document.createElement('option');\n\n        opt.value = option;\n        opt.textContent = option;\n        input.appendChild(opt);\n      });\n    } else {\n      input = document.createElement('input');\n      input.type = field.type;\n    }\n\n    input.name = field.qa;\n    input.setAttribute('data-qa', field.qa);\n\n    label.appendChild(input);\n    form.appendChild(label);\n  });\n\n  const submitButton = document.createElement('button');\n\n  submitButton.type = 'button';\n  submitButton.textContent = 'Save to table';\n  submitButton.setAttribute('data-qa', 'save');\n\n  form.appendChild(submitButton);\n  document.querySelector('table').insertAdjacentElement('afterend', form);\n\n  const tbody = document.querySelector('tbody');\n\n  const pushNotification = (title, description, type) => {\n    const element = document.createElement('div');\n    const h2Element = document.createElement('h2');\n    const pElement = document.createElement('p');\n\n    element.classList.add('notification', type);\n    element.setAttribute('data-qa', 'notification');\n    h2Element.classList.add('title');\n\n    h2Element.textContent = title;\n    pElement.textContent = description;\n\n    element.appendChild(h2Element);\n    element.appendChild(pElement);\n\n    document.body.appendChild(element);\n\n    setTimeout(() => {\n      element.remove();\n    }, 3000);\n  };\n\n  submitButton.addEventListener('click', () => {\n    const employeeName = form.querySelector('[data-qa=\"name\"]').value.trim();\n    const position = form.querySelector('[data-qa=\"position\"]').value.trim();\n    const office = form.querySelector('[data-qa=\"office\"]').value;\n    const age = form.querySelector('[data-qa=\"age\"]').value.trim();\n    const salary = form.querySelector('[data-qa=\"salary\"]').value.trim();\n\n    if (employeeName.length < 4) {\n      pushNotification(\n        'Error',\n        'Name must be at least 4 characters long.',\n        'error',\n      );\n\n      return;\n    }\n\n    if (age < 18 || age > 90) {\n      pushNotification('Error', 'Age must be between 18 and 90.', 'error');\n\n      return;\n    }\n\n    if (!employeeName || !position || !office || !age || !salary) {\n      pushNotification('Error', 'All fields are required.', 'error');\n\n      return;\n    }\n\n    const newRow = document.createElement('tr');\n\n    newRow.innerHTML = `\n          <td>${employeeName}</td>\n          <td>${position}</td>\n          <td>${office}</td>\n          <td>${age}</td>\n          <td>$${parseInt(salary).toLocaleString()}</td>\n      `;\n\n    tbody.appendChild(newRow);\n    pushNotification('Success', 'New employee added to the table.', 'success');\n    form.reset();\n  });\n\n  const theadElem = document.querySelector('thead');\n  const thList = Array.from(theadElem.querySelectorAll('th'));\n  let sortOrder = 'asc';\n  let lastSortedColumnIndex = -1;\n\n  const sortTable = (rows, column, isNumber = false, order = 'asc') => {\n    return rows.sort((rowA, rowB) => {\n      let cellA = rowA.cells[column].innerText.trim();\n      let cellB = rowB.cells[column].innerText.trim();\n\n      if (isNumber) {\n        cellA = parseInt(cellA.replace(/[$,]/g, ''));\n        cellB = parseInt(cellB.replace(/[$,]/g, ''));\n      }\n\n      if (order === 'asc') {\n        return isNumber ? cellA - cellB : cellA.localeCompare(cellB);\n      } else {\n        return isNumber ? cellB - cellA : cellB.localeCompare(cellA);\n      }\n    });\n  };\n\n  thList.forEach((thElement, index) => {\n    thElement.addEventListener('click', () => {\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      const isNumber = index === 3 || index === 4;\n      let order = 'asc';\n\n      if (lastSortedColumnIndex === index) {\n        order = sortOrder === 'asc' ? 'desc' : 'asc';\n      } else {\n        lastSortedColumnIndex = index;\n      }\n\n      sortOrder = order;\n\n      const sortedRows = sortTable(rows, index, isNumber, sortOrder);\n\n      tbody.innerHTML = '';\n      sortedRows.forEach((row) => tbody.appendChild(row));\n    });\n  });\n\n  let activeRow = null;\n\n  tbody.addEventListener('click', (ev) => {\n    const targetRow = ev.target.closest('tr');\n\n    if (!targetRow) {\n      return;\n    }\n\n    if (activeRow) {\n      activeRow.classList.remove('active');\n    }\n\n    if (activeRow !== targetRow) {\n      targetRow.classList.add('active');\n      activeRow = targetRow;\n    } else {\n      activeRow = null;\n    }\n  });\n});\n"],"names":["document","addEventListener","form","createElement","className","fields","label","type","qa","options","forEach","field","input","textContent","concat","option","opt","value","appendChild","name","setAttribute","submitButton","querySelector","insertAdjacentElement","tbody","pushNotification","title","description","element","h2Element","pElement","classList","add","body","setTimeout","remove","employeeName","trim","position","office","age","salary","length","newRow","innerHTML","parseInt","toLocaleString","reset","thList","Array","from","theadElem","querySelectorAll","sortOrder","lastSortedColumnIndex","sortTable","rows","column","isNumber","arguments","order","sort","rowA","rowB","cellA","cells","innerText","cellB","replace","localeCompare","thElement","index","sortedRows","row","activeRow","ev","targetRow","target","closest"],"version":3,"file":"index.3b58c743.js.map"}